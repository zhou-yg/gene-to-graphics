{"version":3,"sources":["G.js"],"names":["normalizeGraphics","G","constructor","initial","type","attrs","genes","getAttrs","attrKeys","Object","keys","map","k","gene","Array","isArray","geneArr","v","i","express","reduce","p","c","assign","output","Polygon","name","pointers","fill","Rect","x","y","w","h","Circle","r","graphicsData","initShowData","d","originData","prop","geneName","filter","gen","_","graphicsList","concat","obj","id","_id","nameText","decodeURIComponent","showData","categoryMap","other","eye","head","horn","category","list","push","values"],"mappings":"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","file":"G.map","sourceRoot":"../src/lib","sourcesContent":["export class G {\n  constructor (initial) {\n    this.type = initial.type || '';\n    this.attrs = initial.attrs || {};\n    this.genes = initial.genes || {};\n  }\n  getAttrs () {\n    const attrKeys = Object.keys(this.attrs);\n    return attrKeys.map(k => {\n      const gene = this.genes[k];\n\n      if (Array.isArray(this.attrs[k])) {\n        let geneArr = gene || [];\n        return {\n          [k]: this.attrs[k].map((v, i) => {\n            return geneArr[i] ? (geneArr[i].express || 0) : v;\n          }),\n        };\n      }\n      return {\n        [k]: gene ? gene.express ? gene.express : 0 : this.attrs[k],\n      }\n    }).reduce((p, c) => Object.assign(p, c), {});\n  }\n  output () {\n    return {\n      type: this.type,\n      ...this.getAttrs(),\n    }\n  }\n}\n\nexport class Polygon extends G {\n  constructor (initial = {}) {\n    super(initial);\n    this.type = Polygon.name;\n    if (!initial.attrs) {\n      this.attrs = {\n        pointers: [20, 20, 100, 20, 100, 100, 20, 20],\n        fill: '#000000',\n      }\n    }\n  }\n}\n\nexport class Rect extends G {\n  constructor (initial = {}) {\n    super(initial);\n    this.type = Rect.name;\n    if (!initial.attrs) {\n      this.attrs = {\n        x: 20,\n        y: 20,\n        w: 80,\n        h: 50,\n        fill: '#000000',\n      };\n    }\n  }\n}\n\nexport class Circle extends G {\n  constructor (initial = {}) {\n    super(initial);\n    this.type = Circle.name;\n    if (!initial.attrs) {\n      this.attrs = {\n        x: 100,\n        y: 100,\n        r: 30,\n        fill: '#000000',\n      };\n    }\n  }\n}\n\nexport function normalizeGraphics (graphicsData, genes) {\n\n  function initShowData (d) {\n    return d.map(originData => {\n      originData = {\n        ...originData,\n        genes: Object.keys(originData.genes).map(prop => {\n          const geneName = originData.genes[prop]\n\n          if (!geneName) {\n            return {};\n          }\n          return {\n            [prop]: genes.filter(gen => gen.name === prop)[0],\n          }\n        }).reduce((p, c) => Object.assign(p, c), {}),\n      }\n\n      switch (originData.type) {\n        case Rect.name:\n          return new Rect(originData);\n        case Circle.name:\n          return new Circle(originData);\n        case Polygon.name:\n          return new Polygon(originData);\n      }\n    }).filter(_ => _);\n  }\n\n  const graphicsList = [].concat(graphicsData).map(obj => ({\n    ...obj,\n    id: obj._id,\n    nameText: decodeURIComponent(obj.name),\n    showData: initShowData(obj.showData || []),\n  }));\n\n\n  var r = {};\n  const categoryMap = {\n    other: '其它',\n    eye: '眼',\n    head: '头',\n    horn: '角',\n  };\n  graphicsList.map(obj => {\n    var category = obj.category;\n    if (!category) {\n      category = 'other';\n    }\n    if (!categoryMap[category]) {\n      // throw new Error(`${category} not found map`);\n    }\n    if (!r[category]) {\n      r[category] = {\n        category,\n        name: categoryMap[category] || 'other',\n        graphicsList: [],\n      }\n    }\n    var list = r[category];\n    list.graphicsList.push(obj);\n  });\n  r = Object.values(r);\n\n  return r;\n}\n//\n// module.exports = {\n//   normalizeGraphics,\n//   G,\n//   Polygon,\n//   Rect,\n//   Circle,\n// };\n"]}